// <auto-generated />
using System;
using AOGSystem.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AOGSystem.Persistence.Migrations
{
    [DbContext(typeof(AOGSystemContext))]
    [Migration("20240522052326_intialSqlMigration")]
    partial class intialSqlMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AOGSystem.Domain.Attachments.Attachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("file_name");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("file_path");

                    b.Property<long>("Size")
                        .HasColumnType("bigint")
                        .HasColumnName("size");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sype");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("attachments", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.Attachments.AttachmentLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("AttachmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("attachment_id");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("entity_id");

                    b.Property<string>("EntityType")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("entity_type");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id", "AttachmentId", "EntityId", "EntityType");

                    b.HasIndex("AttachmentId");

                    b.ToTable("attachment_links", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.CoreFollowUps.CoreFollowUp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("AWBNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("awb_no");

                    b.Property<string>("Aircraft")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("aircraft");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime>("POCreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("po_created_date");

                    b.Property<DateTime?>("PODDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("pod_date");

                    b.Property<string>("PONo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("po_no");

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("part_number");

                    b.Property<DateTime?>("PartReceiveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("part_receive_date");

                    b.Property<DateTime?>("PartReleasedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("part_released_date");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remark");

                    b.Property<DateTime>("ReturnDueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("return_due_date");

                    b.Property<DateTime?>("ReturnProcessedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("return_processed_date");

                    b.Property<string>("ReturnedPart")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("returned_part");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<string>("StockNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stock_no");

                    b.Property<string>("TailNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tail_no");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vendor");

                    b.HasKey("Id");

                    b.ToTable("core_follow_ups", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.CoreFollowUps.CostSaving", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CNDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("cn_date");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsPurchaseOrder")
                        .HasColumnType("bit")
                        .HasColumnName("is_purchase_order");

                    b.Property<bool?>("IsRepairOrder")
                        .HasColumnType("bit")
                        .HasColumnName("is_repair_order");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("issue_date");

                    b.Property<string>("NewPO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("new_po");

                    b.Property<decimal?>("NewPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("new_price");

                    b.Property<string>("OldPO")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("old_po");

                    b.Property<decimal?>("OldPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("old_price");

                    b.Property<decimal?>("PriceVariance")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price_variance");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remark");

                    b.Property<string>("SavedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("saved_by");

                    b.Property<decimal?>("SavingInETB")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("saving_in_ETB");

                    b.Property<decimal?>("SavingInUSD")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("saving_in_USD");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("cost_saving", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.FollowUp.AOGFollowUp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("AOGStation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("aog_station");

                    b.Property<string>("AWBNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("awb_no");

                    b.Property<string>("AirCraft")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("air_craft");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("EDD")
                        .HasColumnType("datetime2")
                        .HasColumnName("edd");

                    b.Property<string>("FlightNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("flight_no");

                    b.Property<Guid>("FollowUpTabsId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("follow_up_tabs");

                    b.Property<bool>("NeedHigherMgntAttn")
                        .HasColumnType("bit")
                        .HasColumnName("need_higher_mgnt_attn");

                    b.Property<string>("OrderType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("order_type");

                    b.Property<string>("PONumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("po_number");

                    b.Property<Guid?>("PartId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("part_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("RID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("rid");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("request_date");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<string>("TailNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tail_no");

                    b.Property<string>("UOM")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("uom");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.Property<string>("Vendor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vendor");

                    b.Property<string>("WorkLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("work_location");

                    b.HasKey("Id");

                    b.HasIndex("FollowUpTabsId");

                    b.HasIndex("PartId");

                    b.ToTable("aog_follow_ups", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.FollowUp.Assignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid?>("AssignedTo")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("assigned_to");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ClosedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("due_date");

                    b.Property<DateTime?>("ExpectedFinishedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("expected_finished_date");

                    b.Property<Guid?>("FinishedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("finished_by");

                    b.Property<DateTime?>("FinishedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("finished_date");

                    b.Property<DateTime?>("ReAssignedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("reassigned_at");

                    b.Property<Guid?>("ReAssignedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reassigned_by");

                    b.Property<Guid?>("ReAssignedTo")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reassigned_to");

                    b.Property<DateTime?>("ReOpenedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("reopned_at");

                    b.Property<Guid?>("ReOpenedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reopned_by");

                    b.Property<Guid?>("StartBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("start_by");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("assignment", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.FollowUp.FollowUpTabs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("follow_tabs", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.FollowUp.Remark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("AOGFollowUpId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("AOGFollowUpId");

                    b.ToTable("remarks", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.General.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("BillToAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bill_to_address");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("city");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("PaymentTerm")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("payment_term");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<string>("ShipToAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ship_to_address");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("companies", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.General.Part", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("FinancialClass")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("financial_class");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("manufacturer");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("part_number");

                    b.Property<string>("PartType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("part_type");

                    b.Property<Guid?>("QuotationPartListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StockNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stock_no");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("QuotationPartListId");

                    b.ToTable("parts", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.General.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone_number");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("AOGSystem.Domain.Invoices.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DueDate")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("due_date");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("invoice_date");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("invoice_no");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit")
                        .HasColumnName("is_approved");

                    b.Property<Guid?>("LoanOrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("loan_order_id");

                    b.Property<DateTime?>("POPDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("pop_date");

                    b.Property<string>("POPReference")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pop_reference");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remark");

                    b.Property<Guid?>("SalesOrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("sales_order_id");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("transaction_type");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("invoice", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.Invoices.InvoicePartList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("currency");

                    b.Property<Guid?>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Offers")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("offers");

                    b.Property<Guid>("PartId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("part_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("RID")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("rid");

                    b.Property<string>("SerialNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("serila_no");

                    b.Property<double?>("TotalPrice")
                        .IsRequired()
                        .HasColumnType("float")
                        .HasColumnName("total_price");

                    b.Property<string>("UOM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("uom");

                    b.Property<double?>("UnitPrice")
                        .IsRequired()
                        .HasColumnType("float")
                        .HasColumnName("unit_price");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("PartId");

                    b.ToTable("invoice_part_list", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.Loans.Loan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("company_id");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<string>("CustomerOrderNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customer_order_no");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit")
                        .HasColumnName("is_approve");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "order_no");

                    b.Property<string>("OrderedByEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ordered_by_email");

                    b.Property<string>("OrderedByName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ordered_by_name");

                    b.Property<string>("ShipToAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ship_to_address");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "status");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("loans", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.Loans.LoanPartList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsInvoiced")
                        .HasColumnType("bit")
                        .HasColumnName("is_invoice");

                    b.Property<Guid?>("LoanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PartId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("part_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("RID")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("rid");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("received_date");

                    b.Property<string>("ReceivingDefect")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("receiving_defect");

                    b.Property<string>("ReceivingReference")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("receiving_reference");

                    b.Property<string>("SerialNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("serila_no");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ship_date");

                    b.Property<string>("ShippingReference")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shipping_reference");

                    b.Property<string>("UOM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("uom");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.HasIndex("PartId");

                    b.ToTable("loan_part_lists", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.Loans.Offer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<double>("BasePrice")
                        .HasColumnType("float")
                        .HasColumnName("base_price");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("currency");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<Guid?>("LoanPartListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float")
                        .HasColumnName("total_price");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float")
                        .HasColumnName("unit_price");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("LoanPartListId");

                    b.ToTable("offers", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.Quotation.Quotation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("company_id");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<bool>("Exchange")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("exchange");

                    b.Property<bool>("Loan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("loan");

                    b.Property<Guid?>("OfferedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("offered_by_id");

                    b.Property<string>("RequestedByEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("requested_by_email");

                    b.Property<string>("RequestedByName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("requested_by_name");

                    b.Property<string>("RequestedByPhone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("requested_by_phone");

                    b.Property<bool>("Sales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("sales");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OfferedById");

                    b.ToTable("quotations", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.Quotation.QuotationPartList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("condition");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("current_price");

                    b.Property<decimal>("ExchangePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("exchange_price");

                    b.Property<decimal>("FixedLoanPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("fixed_loan_price");

                    b.Property<decimal>("LoanPricePerDay")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("loan_price_per_day");

                    b.Property<Guid>("PartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuotationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("SalesPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("sales_price");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stock_location");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.HasIndex("QuotationId");

                    b.ToTable("quotation_partLists", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.SOA.BuyerRemark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<Guid?>("InvoiceListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceListId");

                    b.ToTable("buyer_remark", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.SOA.FinanceRemark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<Guid?>("InvoiceListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceListId");

                    b.ToTable("finance_remark", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.SOA.InvoiceList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BuyerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PONo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("POPDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("POPReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TLName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnderFollowup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VendorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VendorId");

                    b.ToTable("InvoiceLists");
                });

            modelBuilder.Entity("AOGSystem.Domain.SOA.Vendor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("AssessmentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("AssessmentDate");

                    b.Property<DateTime?>("CertificateExpiryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("certificate_expiry_date");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<double?>("CreditLimit")
                        .HasColumnType("float")
                        .HasColumnName("credit_limit");

                    b.Property<string>("ETFinanceContactEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("et_finance_contact_email");

                    b.Property<string>("ETFinanceContactName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("et_finance_contact_name");

                    b.Property<double?>("PaidAmount")
                        .HasColumnType("float")
                        .HasColumnName("paid_amount");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("remark");

                    b.Property<Guid?>("SOAHandlerBuyerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("soa_handler_buyer_id");

                    b.Property<string>("SOAHandlerBuyerName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("soa_handler_buyer_name");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.Property<double?>("TotalOutstanding")
                        .HasColumnType("float")
                        .HasColumnName("total_outstanding");

                    b.Property<double?>("UnderDispute")
                        .HasColumnType("float")
                        .HasColumnName("under_dispute");

                    b.Property<double?>("UnderProcess")
                        .HasColumnType("float")
                        .HasColumnName("under_process");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.Property<string>("VendorAccountManagerEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vendor_account_manager_email");

                    b.Property<string>("VendorAccountManagerName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vendor_account_manager_name");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vendor_code");

                    b.Property<string>("VendorFinanceContactEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vendor_finance_contact_email");

                    b.Property<string>("VendorFinanceContactName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vendor_finance_contact_name");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vendor_name");

                    b.HasKey("Id");

                    b.ToTable("vendor", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.Sales.Sales", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("AWBNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("awb_no");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("company_id");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<string>("CustomerOrderNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("customer_order_no");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit")
                        .HasColumnName("is_approve");

                    b.Property<bool>("IsFullyShipped")
                        .HasColumnType("bit")
                        .HasColumnName("is_fully_shipped");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<string>("OrderByEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("order_by_email");

                    b.Property<string>("OrderByName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ordered_by_name");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("order_no");

                    b.Property<bool>("ReceivedByCustomer")
                        .HasColumnType("bit")
                        .HasColumnName("received_bu_customer");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("received_date");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ship_date");

                    b.Property<string>("ShipToAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ship_to_address");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "status");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("sales", "AOGsystem");
                });

            modelBuilder.Entity("AOGSystem.Domain.Sales.SalesPartList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("created_by");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("currency");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsInvoiced")
                        .HasColumnType("bit")
                        .HasColumnName("is_invoice");

                    b.Property<Guid>("PartId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("part_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("RID")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("rid");

                    b.Property<Guid?>("SalesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SerialNo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("serila_no");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float")
                        .HasColumnName("total_price");

                    b.Property<string>("UOM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("uom");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float")
                        .HasColumnName("unit_price");

                    b.Property<DateTime?>("UpdatedAT")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.HasIndex("SalesId");

                    b.ToTable("sales_part_list", "AOGsystem");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AOGSystem.Domain.Attachments.AttachmentLink", b =>
                {
                    b.HasOne("AOGSystem.Domain.Attachments.Attachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attachment");
                });

            modelBuilder.Entity("AOGSystem.Domain.FollowUp.AOGFollowUp", b =>
                {
                    b.HasOne("AOGSystem.Domain.FollowUp.FollowUpTabs", null)
                        .WithMany("FollowUps")
                        .HasForeignKey("FollowUpTabsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AOGSystem.Domain.General.Part", "Part")
                        .WithMany()
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Part");
                });

            modelBuilder.Entity("AOGSystem.Domain.FollowUp.Remark", b =>
                {
                    b.HasOne("AOGSystem.Domain.FollowUp.AOGFollowUp", null)
                        .WithMany("Remarks")
                        .HasForeignKey("AOGFollowUpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AOGSystem.Domain.General.Part", b =>
                {
                    b.HasOne("AOGSystem.Domain.Quotation.QuotationPartList", null)
                        .WithMany("Parts")
                        .HasForeignKey("QuotationPartListId");
                });

            modelBuilder.Entity("AOGSystem.Domain.Invoices.Invoice", b =>
                {
                    b.HasOne("AOGSystem.Domain.Sales.Sales", null)
                        .WithMany()
                        .HasForeignKey("SalesOrderId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("AOGSystem.Domain.Invoices.InvoicePartList", b =>
                {
                    b.HasOne("AOGSystem.Domain.Invoices.Invoice", null)
                        .WithMany("InvoicePartLists")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("AOGSystem.Domain.General.Part", null)
                        .WithMany()
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("AOGSystem.Domain.Loans.Loan", b =>
                {
                    b.HasOne("AOGSystem.Domain.General.Company", null)
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("AOGSystem.Domain.Loans.LoanPartList", b =>
                {
                    b.HasOne("AOGSystem.Domain.Loans.Loan", null)
                        .WithMany("LoanPartLists")
                        .HasForeignKey("LoanId");

                    b.HasOne("AOGSystem.Domain.General.Part", null)
                        .WithMany()
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("AOGSystem.Domain.Loans.Offer", b =>
                {
                    b.HasOne("AOGSystem.Domain.Loans.LoanPartList", null)
                        .WithMany("Offers")
                        .HasForeignKey("LoanPartListId");
                });

            modelBuilder.Entity("AOGSystem.Domain.Quotation.Quotation", b =>
                {
                    b.HasOne("AOGSystem.Domain.General.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AOGSystem.Domain.General.User", "OfferedBy")
                        .WithMany()
                        .HasForeignKey("OfferedById")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Company");

                    b.Navigation("OfferedBy");
                });

            modelBuilder.Entity("AOGSystem.Domain.Quotation.QuotationPartList", b =>
                {
                    b.HasOne("AOGSystem.Domain.General.Part", "Part")
                        .WithMany()
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AOGSystem.Domain.Quotation.Quotation", null)
                        .WithMany("QuotationPartsLists")
                        .HasForeignKey("QuotationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Part");
                });

            modelBuilder.Entity("AOGSystem.Domain.SOA.BuyerRemark", b =>
                {
                    b.HasOne("AOGSystem.Domain.SOA.InvoiceList", null)
                        .WithMany("BuyerRemarks")
                        .HasForeignKey("InvoiceListId");
                });

            modelBuilder.Entity("AOGSystem.Domain.SOA.FinanceRemark", b =>
                {
                    b.HasOne("AOGSystem.Domain.SOA.InvoiceList", null)
                        .WithMany("FinanceRemarks")
                        .HasForeignKey("InvoiceListId");
                });

            modelBuilder.Entity("AOGSystem.Domain.SOA.InvoiceList", b =>
                {
                    b.HasOne("AOGSystem.Domain.SOA.Vendor", null)
                        .WithMany("InvoiceLists")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AOGSystem.Domain.Sales.Sales", b =>
                {
                    b.HasOne("AOGSystem.Domain.General.Company", null)
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("AOGSystem.Domain.Sales.SalesPartList", b =>
                {
                    b.HasOne("AOGSystem.Domain.General.Part", null)
                        .WithMany()
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AOGSystem.Domain.Sales.Sales", null)
                        .WithMany("SalesPartLists")
                        .HasForeignKey("SalesId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("AOGSystem.Domain.General.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("AOGSystem.Domain.General.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AOGSystem.Domain.General.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("AOGSystem.Domain.General.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AOGSystem.Domain.FollowUp.AOGFollowUp", b =>
                {
                    b.Navigation("Remarks");
                });

            modelBuilder.Entity("AOGSystem.Domain.FollowUp.FollowUpTabs", b =>
                {
                    b.Navigation("FollowUps");
                });

            modelBuilder.Entity("AOGSystem.Domain.Invoices.Invoice", b =>
                {
                    b.Navigation("InvoicePartLists");
                });

            modelBuilder.Entity("AOGSystem.Domain.Loans.Loan", b =>
                {
                    b.Navigation("LoanPartLists");
                });

            modelBuilder.Entity("AOGSystem.Domain.Loans.LoanPartList", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("AOGSystem.Domain.Quotation.Quotation", b =>
                {
                    b.Navigation("QuotationPartsLists");
                });

            modelBuilder.Entity("AOGSystem.Domain.Quotation.QuotationPartList", b =>
                {
                    b.Navigation("Parts");
                });

            modelBuilder.Entity("AOGSystem.Domain.SOA.InvoiceList", b =>
                {
                    b.Navigation("BuyerRemarks");

                    b.Navigation("FinanceRemarks");
                });

            modelBuilder.Entity("AOGSystem.Domain.SOA.Vendor", b =>
                {
                    b.Navigation("InvoiceLists");
                });

            modelBuilder.Entity("AOGSystem.Domain.Sales.Sales", b =>
                {
                    b.Navigation("SalesPartLists");
                });
#pragma warning restore 612, 618
        }
    }
}
